@rendermode InteractiveServer

@page "/movies/{MovieId:int}"
@using System.Collections.Generic
@using System.Globalization
@using System.Linq
@using CineReview.Components.Shared
@using Microsoft.AspNetCore.Components.Web
@using Microsoft.AspNetCore.Components.Routing
@inject IMovieDataProvider MovieDataProvider

@{
    var summary = _profile?.Summary;
    var pageTitle = summary is null ? "CineReview" : $"{summary.Title} | CineReview";
    var hasPoster = !string.IsNullOrWhiteSpace(summary?.PosterUrl);
    var hasBackdrop = !string.IsNullOrWhiteSpace(summary?.BackdropUrl);
    var posterUrl = hasPoster ? summary!.PosterUrl : "https://placehold.co/600x900?text=Poster+updating";
    var backdropUrl = hasBackdrop ? summary!.BackdropUrl : string.Empty;
    var certification = string.IsNullOrWhiteSpace(_profile?.Certification) ? "Đang cập nhật" : _profile!.Certification;
    var runtimeLabel = _profile?.RuntimeMinutes > 0 ? $"{_profile.RuntimeMinutes} phút" : "Đang cập nhật";
    var statusLabel = string.IsNullOrWhiteSpace(_profile?.Status) ? "Đang cập nhật" : _profile!.Status;
    var genresDisplay = summary is not null && summary.Genres.Any() ? string.Join(" / ", summary.Genres) : "Đang cập nhật";
    var releaseDateShort = summary?.ReleaseDate.ToString("dd MMM yyyy") ?? "Đang cập nhật";
    var releaseDateLong = summary?.ReleaseDate.ToString("dd/MM/yyyy") ?? "Đang cập nhật";
    var communityScore = summary is not null && summary.CommunityScore > 0 ? summary.CommunityScore.ToString("0.0") : "Chưa có";
    var reviewPolicyLabel = summary?.RequiresTicketVerification == true ? "Cần xác thực vé" : "Tự do review";
    var reviewPolicyChipClass = summary?.RequiresTicketVerification == true ? "chip chip--danger" : "chip chip--success";
    var tagline = summary is not null && !string.IsNullOrWhiteSpace(summary.Tagline) ? summary.Tagline : null;
    var overview = summary?.Overview ?? string.Empty;
}

<PageTitle>@pageTitle</PageTitle>

@if (_isLoading)
{
    <section class="container-xl py-5 my-5 text-center">
        <div class="spinner-border text-info" role="status"></div>
    </section>
}
else if (_profile is null)
{
    <section class="container-xl py-5 my-5 text-center">
        <h1 class="display-5 text-white mb-3">Không tìm thấy phim</h1>
        <p class="text-secondary">Có thể phim đã bị gỡ khỏi hệ thống hoặc chưa được thêm vào dữ liệu minh họa.</p>
        <a class="btn btn-outline-info" href="/">Quay lại trang chủ</a>
    </section>
}
else
{
    <article class="movie-detail">
        <section class="detail-hero position-relative overflow-hidden" data-has-backdrop="@hasBackdrop">
            <div class="detail-hero__backdrop" style="@(hasBackdrop ? $"background-image: url('{backdropUrl}');" : null)"></div>
            <div class="detail-hero__overlay"></div>
            <div class="container-xl position-relative">
                <div class="detail-hero__layout-mobile d-md-none">
                    <div class="detail-hero__poster-shell">
                        <div class="rounded-4 overflow-hidden shadow-lg detail-hero__poster @(hasPoster ? string.Empty : "detail-hero__poster--fallback")">
                            @if (hasPoster)
                            {
                                <img src="@posterUrl" alt="Poster @summary?.Title" class="w-100 h-100 object-fit-cover" loading="lazy" />
                            }
                            else
                            {
                                <div class="detail-hero__poster-placeholder">
                                    <i class="bi bi-image"></i>
                                    <span>Poster đang cập nhật</span>
                                </div>
                            }
                        </div>
                    </div>
                    <div class="detail-hero__mobile-body">
                        <div class="d-flex align-items-center gap-2 flex-wrap mb-3">
                            <span class="badge chip chip--primary">@releaseDateShort</span>
                            <span class="badge chip chip--muted">@certification</span>
                        </div>
                        <h1 class="display-5 fw-bold text-white mb-2">@summary?.Title</h1>
                        @if (!string.IsNullOrWhiteSpace(tagline))
                        {
                            <p class="detail-hero__tagline text-light-emphasis mb-3">@tagline</p>
                        }
                        @if (!string.IsNullOrWhiteSpace(overview))
                        {
                            <p class="text-secondary mb-3">@overview</p>
                        }
                        <div class="detail-hero__actions d-flex flex-column gap-2 mb-4">
                            <a class="btn btn-primary btn-glow w-100" href="#tickets">Mua vé ngay</a>
                            <button type="button" class="btn btn-ghost w-100" @onclick="OpenReviewSheet">Viết review</button>
                        </div>
                        <div class="detail-hero__mobile-meta">
                            <div class="detail-hero__meta-chip">
                                <span class="label">Điểm cộng đồng</span>
                                <span class="value">@communityScore</span>
                            </div>
                            <div class="detail-hero__meta-chip">
                                <span class="label">Thời lượng</span>
                                <span class="value">@runtimeLabel</span>
                            </div>
                            <div class="detail-hero__meta-chip">
                                <span class="label">Trạng thái</span>
                                <span class="value">@statusLabel</span>
                            </div>
                            <div class="detail-hero__meta-chip">
                                <span class="label">Review</span>
                                <span class="value">
                                    <span class="@reviewPolicyChipClass">@reviewPolicyLabel</span>
                                </span>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="detail-hero__layout d-none d-md-grid py-2">
                    <div class="detail-hero__poster-shell">
                        <div class="rounded-4 overflow-hidden shadow-lg detail-hero__poster @(hasPoster ? string.Empty : "detail-hero__poster--fallback")">
                            @if (hasPoster)
                            {
                                <img src="@posterUrl" alt="Poster @summary?.Title" class="w-100 h-100 object-fit-cover" loading="lazy" />
                            }
                            else
                            {
                                <div class="detail-hero__poster-placeholder">
                                    <i class="bi bi-image"></i>
                                    <span>Poster đang cập nhật</span>
                                </div>
                            }
                        </div>
                    </div>
                    <div class="detail-hero__body">
                        <div class="d-flex align-items-center gap-3 flex-wrap mb-3">
                            <span class="badge chip chip--primary">@releaseDateShort</span>
                            <span class="badge chip chip--muted">@certification</span>
                        </div>
                        <h1 class="display-4 fw-bold text-white mb-3">@summary?.Title</h1>
                        @if (!string.IsNullOrWhiteSpace(tagline))
                        {
                            <p class="lead text-light-emphasis mb-4">@tagline</p>
                        }
                        @if (!string.IsNullOrWhiteSpace(overview))
                        {
                            <p class="text-secondary mb-4">@overview</p>
                        }
                        <div class="detail-hero__actions d-flex flex-wrap gap-3 mb-4">
                            <a class="btn btn-primary btn-glow" href="#tickets">Mua vé ngay</a>
                            <button type="button" class="btn btn-ghost" @onclick="OpenReviewSheet">Viết review</button>
                        </div>
                        <div class="detail-hero__meta">
                            <div>
                                <span class="text-secondary">Điểm cộng đồng</span>
                                <span class="fw-semibold text-white">@communityScore</span>
                            </div>
                            <div>
                                <span class="text-secondary">Thời lượng</span>
                                <span class="fw-semibold text-white">@runtimeLabel</span>
                            </div>
                            <div>
                                <span class="text-secondary">Trạng thái</span>
                                <span class="fw-semibold text-white">@statusLabel</span>
                            </div>
                            <div>
                                <span class="text-secondary">Chính sách review</span>
                                <span class="@reviewPolicyChipClass">@reviewPolicyLabel</span>
                            </div>
                        </div>
                    </div>
                    <div class="detail-hero__info-card d-none d-lg-block">
                        <h2 class="h6 text-secondary text-uppercase">Thông tin nhanh</h2>
                        <ul class="list-unstyled mb-0">
                            <li><span>Thể loại</span><span>@genresDisplay</span></li>
                            <li><span>Ngày phát hành</span><span>@releaseDateLong</span></li>
                            <li><span>Thời lượng</span><span>@runtimeLabel</span></li>
                            <li><span>Chứng nhận</span><span>@certification</span></li>
                        </ul>
                    </div>
                </div>

                <div class="detail-hero__info-card detail-hero__info-card--mobile d-md-none">
                    <h2 class="h6 text-secondary text-uppercase">Thông tin nhanh</h2>
                    <ul class="list-unstyled mb-0">
                        <li><span>Thể loại</span><span>@genresDisplay</span></li>
                        <li><span>Ngày phát hành</span><span>@releaseDateLong</span></li>
                        <li><span>Thời lượng</span><span>@runtimeLabel</span></li>
                        <li><span>Chứng nhận</span><span>@certification</span></li>
                    </ul>
                </div>
            </div>
        </section>

        <section class="detail-section" id="about">
            <div class="container-xl">
                <div class="row g-5">
                    <div class="col-lg-8">
                        <h2 class="h3 text-white mb-3">Điểm nhấn nội dung</h2>
                        @if (_profile.Highlights.Any())
                        {
                            <ul class="detail-highlights">
                                @foreach (var highlight in _profile.Highlights)
                                {
                                    <li>@highlight</li>
                                }
                            </ul>
                        }
                        else
                        {
                            <p class="text-secondary mb-4">Thông tin điểm nhấn đang cập nhật. Hãy quay lại sau để xem thêm.</p>
                        }

                        <div class="ticket-policy" id="tickets">
                            <h3 class="h5 text-white mb-2">Chính sách vé & review</h3>
                            <p class="text-secondary mb-0">@_profile.TicketPolicyNote</p>
                        </div>
                    </div>
                    <div class="col-lg-4">
                        <div class="watch-options">
                            <h2 class="h5 text-white mb-3">Các định dạng đang mở bán</h2>
                            @if (_profile.WatchOptions.Any())
                            {
                                <ul class="list-unstyled m-0">
                                    @foreach (var option in _profile.WatchOptions)
                                    {
                                        <li><i class="bi bi-camera-reels me-2 text-info"></i>@option</li>
                                    }
                                </ul>
                            }
                            else
                            {
                                <p class="text-secondary small mb-0">Thông tin suất chiếu đang được cập nhật.</p>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </section>

        <section class="detail-section" id="cast">
            <div class="container-xl">
                <div class="section-header">
                    <h2 class="h3 text-white mb-0">Diễn viên chính</h2>
                </div>
                @if (_profile.TopCast.Any())
                {
                    <div class="cast-grid">
                        @foreach (var cast in _profile.TopCast)
                        {
                            <div class="cast-card">
                                <img src="@cast.HeadshotUrl" alt="@cast.Name" loading="lazy" />
                                <div class="cast-card__info">
                                    <span class="fw-semibold text-white">@cast.Name</span>
                                    <span class="text-secondary">@cast.Character</span>
                                </div>
                            </div>
                        }
                    </div>
                }
                else
                {
                    <p class="text-secondary mb-0">Danh sách diễn viên đang được cập nhật.</p>
                }
            </div>
        </section>

    @if (_profile.Videos.Any())
        {
            <section class="detail-section" id="videos">
                <div class="container-xl">
                    <div class="section-header">
                        <h2 class="h3 text-white mb-0">Video chính thức</h2>
                        <span class="text-secondary">Từ kênh @_profile.Videos.First().Provider</span>
                    </div>
                    <div class="row g-4 cards-row-mobile">
                        @foreach (var video in _profile.Videos)
                        {
                            <div class="col-12 col-lg-6">
                                <a class="video-card" href="@video.VideoUrl" target="_blank" rel="noopener">
                                    <div class="video-card__thumb">
                                        <img src="@video.ThumbnailUrl" alt="@video.Title" loading="lazy" />
                                        <span class="video-card__play"><i class="bi bi-play-fill"></i></span>
                                    </div>
                                    <div class="p-4">
                                        <h3 class="h6 text-white mb-1">@video.Title</h3>
                                        <span class="text-secondary small">Phát trên @video.Provider</span>
                                    </div>
                                </a>
                            </div>
                        }
                    </div>
                </div>
            </section>
        }

        <section class="detail-section" id="reviews">
            <div class="container-xl">
                <div class="section-header">
                    <h2 class="h3 text-white mb-0">Review từ cộng đồng</h2>
                    <a class="btn btn-ghost btn-sm" href="#">Xem toàn bộ</a>
                </div>
                <div class="row g-4">
                    @if (_profile.Reviews.Any())
                    {
                        @foreach (var review in _profile.Reviews)
                        {
                            var supportTone = DetermineSupportTone(review.SupportScore);
                            var supportValue = FormatSupportScore(review.SupportScore);
                            <div class="col-12">
                                <article class="community-review">
                                    <div class="community-review__support" data-tone="@supportTone">
                                        <span class="community-review__support-value">@supportValue</span>
                                        <span class="community-review__support-label">ủng hộ</span>
                                    </div>
                                    <div class="community-review__content">
                                        <header class="community-review__header">
                                            <div class="community-review__author">
                                                <img src="@review.AvatarUrl" alt="Avatar @review.Author" class="community-review__avatar" loading="lazy" />
                                                <div>
                                                    <span class="community-review__name">@review.Author</span>
                                                    <span class="community-review__badge">@review.BadgeLabel
                                                    </span>
                                                </div>
                                            </div>
                                            <div class="community-review__meta">
                                                <span class="community-review__username">@review.Username</span>
                                                <span class="community-review__score">@review.Rating/10</span>
                                            </div>
                                        </header>
                                        <p class="community-review__excerpt">@review.Excerpt</p>
                                        <footer class="community-review__footer">
                                            <span>@review.CreatedAt.ToString("dd/MM/yyyy")</span>
                                            @if (!string.IsNullOrWhiteSpace(review.Location))
                                            {
                                                <span class="community-review__bullet">•</span>
                                                <span>@review.Location</span>
                                            }
                                            @if (review.IsTicketVerified)
                                            {
                                                <span class="badge chip chip--success">Đã xác thực vé</span>
                                            }
                                        </footer>
                                    </div>
                                    <div class="community-review__actions">
                                        <button type="button" class="community-review__action community-review__action--fair">
                                            <span class="community-review__action-label">Công tâm</span>
                                        </button>
                                        <button type="button" class="community-review__action community-review__action--unfair">
                                            <span class="community-review__action-label">Không công tâm</span>
                                        </button>
                                    </div>
                                </article>
                            </div>
                        }
                    }
                    else
                    {
                        <div class="col-12">
                            <div class="alert alert-info bg-info-subtle border-info-subtle text-info-emphasis" role="alert">
                                Hãy là người đầu tiên viết review sau khi xác thực vé của bạn.
                            </div>
                        </div>
                    }
                </div>
            </div>
        </section>

        <section class="detail-section" id="recommendations">
            <div class="container-xl">
                <div class="section-header">
                    <h2 class="h3 text-white mb-0">Gợi ý cho bạn</h2>
                    <span class="text-secondary">Những phim liên quan mà cộng đồng đang quan tâm.</span>
                </div>
                @if (_profile.Recommended.Any())
                {
                    <div class="row g-4 cards-row-mobile">
                        @foreach (var movie in _profile.Recommended.Take(4))
                        {
                            <div class="col-12 col-sm-6 col-lg-3">
                                <MovieCard Movie="movie" />
                            </div>
                        }
                    </div>
                }
                else
                {
                    <div class="alert alert-info bg-info-subtle border-info-subtle text-info-emphasis" role="alert">
                        Chưa có gợi ý phù hợp. Bạn hãy khám phá thêm trên trang chủ.
                    </div>
                }
            </div>
        </section>

        @if (_isReviewSheetOpen)
        {
            <div class="review-layer" role="dialog" aria-modal="true" aria-labelledby="reviewSheetTitle">
                <div class="review-layer__backdrop" @onclick="CloseReviewSheet"></div>
                <section class="review-sheet" @onclick:stopPropagation>
                    <header class="review-sheet__header">
                        <div>
                            <p class="review-sheet__eyebrow">Viết review</p>
                            <h3 id="reviewSheetTitle">Chia sẻ cảm nhận của bạn</h3>
                            <p class="review-sheet__intro">Chọn nhanh bằng tag để review hiển thị ngay hoặc nhập nội dung chi tiết (sẽ được duyệt trước khi lên trang).</p>
                        </div>
                        <button type="button" class="btn btn-ghost btn-sm" @onclick="CloseReviewSheet">Đóng</button>
                    </header>
                    <div class="review-sheet__body">
                        <div class="review-sheet__mode-switch" role="tablist">
                            <button type="button" role="tab" class="review-mode-button @( _reviewMode == ReviewModes.Template ? "is-active" : string.Empty)" @onclick="() => SwitchReviewMode(ReviewModes.Template)">Theo tag có sẵn</button>
                            <button type="button" role="tab" class="review-mode-button @( _reviewMode == ReviewModes.Freeform ? "is-active" : string.Empty)" @onclick="() => SwitchReviewMode(ReviewModes.Freeform)">Viết tự do</button>
                        </div>

                        @if (_reviewMode == ReviewModes.Template)
                        {
                            <div class="review-sheet__section">
                                <label class="form-label" for="reviewCategory">Chủ đề chính</label>
                                <select id="reviewCategory" class="form-select" @bind="_selectedTemplateCategory" @bind:event="onchange" @bind:after="OnTemplateCategoryChanged">
                                    <option value="" disabled hidden>Chọn chủ đề</option>
                                    @foreach (var category in TemplateCategories)
                                    {
                                        <option value="@category">@category</option>
                                    }
                                </select>
                            </div>

                            <div class="review-sheet__section">
                                <label class="form-label" for="reviewTag">Đánh giá cụ thể</label>
                                <select id="reviewTag" class="form-select" @bind="_selectedTemplateTag" @bind:event="onchange" disabled="@string.IsNullOrWhiteSpace(_selectedTemplateCategory)">
                                    <option value="" disabled hidden>Chọn nhận xét</option>
                                    @foreach (var tag in TemplateTags)
                                    {
                                        <option value="@tag">@tag</option>
                                    }
                                </select>
                                <div class="review-sheet__hint">Review dạng tag sẽ hiển thị ngay sau khi gửi.</div>
                            </div>

                            <div class="review-sheet__section">
                                <label class="form-label" for="reviewNote">Ghi chú thêm (không bắt buộc)</label>
                                <textarea id="reviewNote" class="form-control" rows="3" placeholder="Ghi thêm cảm nhận ngắn gọn" @bind="_structuredNote"></textarea>
                            </div>
                        }
                        else
                        {
                            <div class="review-sheet__section">
                                <label class="form-label" for="freeformReview">Chia sẻ chi tiết</label>
                                <textarea id="freeformReview" class="form-control" rows="6" placeholder="Hãy kể rõ trải nghiệm rạp, cảm xúc sau khi xem…" @bind="_freeformReview"></textarea>
                                <div class="review-sheet__hint review-sheet__hint--warning">Review bằng chữ sẽ được đội ngũ duyệt trước khi hiển thị.</div>
                            </div>
                        }

                        <div class="form-check review-sheet__simulate">
                            <input class="form-check-input" type="checkbox" id="simulateFailure" @bind="_simulateFailure" />
                            <label class="form-check-label" for="simulateFailure">Giả lập lỗi khi gửi (dành cho kiểm thử UI)</label>
                        </div>
                    </div>
                    <footer class="review-sheet__footer">
                        <button type="button" class="btn btn-ghost" @onclick="CloseReviewSheet">Huỷ</button>
                        <button type="button" class="btn btn-primary" disabled="@(!CanSubmitReview || _isSubmittingReview)" @onclick="RequestSubmit">Gửi review</button>
                    </footer>

                    @if (_isSubmittingReview)
                    {
                        <div class="review-sheet__loader" role="status" aria-live="assertive">
                            <div class="spinner-border text-info" role="status"></div>
                            <span>Đang gửi review...</span>
                        </div>
                    }
                </section>
            </div>

            @if (_showSubmitConfirmation)
            {
                <div class="review-dialog" role="alertdialog" aria-modal="true" aria-labelledby="reviewSubmitConfirmTitle">
                    <div class="review-dialog__backdrop"></div>
                    <div class="review-dialog__panel">
                        <h3 id="reviewSubmitConfirmTitle">Xác nhận gửi review</h3>
                        <p>Bạn xác nhận muốn gửi review này chứ? Hệ thống sẽ hiển thị trạng thái ngay sau khi gửi.</p>
                        <div class="review-dialog__summary">
                            @if (_reviewMode == ReviewModes.Template)
                            {
                                <ul>
                                    <li><span>Chủ đề</span><span>@_selectedTemplateCategory</span></li>
                                    <li><span>Nhận xét</span><span>@_selectedTemplateTag</span></li>
                                    @if (!string.IsNullOrWhiteSpace(_structuredNote))
                                    {
                                        <li><span>Ghi chú</span><span>@_structuredNote</span></li>
                                    }
                                </ul>
                            }
                            else
                            {
                                var preview = _freeformReview.Length > 140 ? _freeformReview[..140] + "…" : _freeformReview;
                                <p>@preview</p>
                            }
                        </div>
                        <div class="review-dialog__actions">
                            <button type="button" class="btn btn-ghost" @onclick="CancelSubmitRequest">Xem lại</button>
                            <button type="button" class="btn btn-primary" @onclick="ConfirmSubmitAsync">Gửi ngay</button>
                        </div>
                    </div>
                </div>
            }

            @if (_showStatusDialog)
            {
                var statusSucceeded = _lastSubmitSucceeded == true;
                var statusIcon = statusSucceeded ? "bi-check-circle-fill" : "bi-exclamation-octagon-fill";
                var statusTitle = statusSucceeded ? "Gửi review thành công" : "Không thể gửi review";
                var statusDescription = statusSucceeded
                    ? "Cảm ơn bạn! Review dạng tag đã được hiển thị ngay cho cộng đồng."
                    : "Hệ thống đang gặp sự cố giả lập. Bạn có thể thử gửi lại hoặc kiểm tra nội dung trước khi thử lại.";
                <div class="review-dialog" role="alertdialog" aria-modal="true" aria-labelledby="reviewStatusTitle">
                    <div class="review-dialog__backdrop"></div>
                    <div class="review-dialog__panel">
                        <div class="review-dialog__status">
                            <i class="@statusIcon review-dialog__status-icon @(statusSucceeded ? "review-dialog__status-icon--success" : "review-dialog__status-icon--error")"></i>
                            <div>
                                <h3 id="reviewStatusTitle">@statusTitle</h3>
                                <p>@statusDescription</p>
                            </div>
                        </div>
                        <div class="review-dialog__actions">
                            @if (statusSucceeded)
                            {
                                <button type="button" class="btn btn-ghost" @onclick="StartAnotherReview">Viết thêm review</button>
                                <button type="button" class="btn btn-primary" @onclick="CloseStatusDialog">Hoàn tất</button>
                            }
                            else
                            {
                                <button type="button" class="btn btn-ghost" @onclick="CloseStatusDialog">Đóng</button>
                                <button type="button" class="btn btn-primary" @onclick="RetrySubmit">Thử lại</button>
                            }
                        </div>
                    </div>
                </div>
            }
        }
    </article>
}

@code {
    [Parameter]
    public int MovieId { get; set; }

    private MovieProfile? _profile;
    private bool _isLoading;

    private bool _isReviewSheetOpen;
    private bool _showSubmitConfirmation;
    private bool _isSubmittingReview;
    private bool _showStatusDialog;
    private bool? _lastSubmitSucceeded;
    private string _reviewMode = ReviewModes.Template;
    private string _selectedTemplateCategory = string.Empty;
    private string _selectedTemplateTag = string.Empty;
    private string _structuredNote = string.Empty;
    private string _freeformReview = string.Empty;
    private bool _simulateFailure;

    private static readonly IReadOnlyDictionary<string, string[]> ReviewTagCatalog = new Dictionary<string, string[]>
    {
        ["Nội dung phim"] = new[] { "Thiếu chiều sâu", "Cốt truyện khó hiểu", "Nhịp phim hợp lý", "Plot twist bất ngờ" },
        ["Diễn xuất"] = new[] { "Diễn xuất ấn tượng", "Chemistry chưa tốt", "Vai phụ nổi bật", "Lời thoại khiên cưỡng" },
        ["Âm thanh & hình ảnh"] = new[] { "Âm thanh sống động", "Nhạc phim chưa đắt", "Kỹ xảo mãn nhãn", "Chuyển cảnh chưa mượt" },
        ["Trải nghiệm rạp"] = new[] { "Màn chiếu rõ nét", "Ghế ngồi chưa thoải mái", "Dịch vụ tốt", "Không khí sôi động" }
    };

    private static class ReviewModes
    {
        public const string Template = "template";
        public const string Freeform = "freeform";
    }

    private IEnumerable<string> TemplateCategories => ReviewTagCatalog.Keys;

    private IEnumerable<string> TemplateTags =>
        string.IsNullOrWhiteSpace(_selectedTemplateCategory)
            ? Enumerable.Empty<string>()
            : ReviewTagCatalog[_selectedTemplateCategory];

    private bool CanSubmitReview =>
        _reviewMode == ReviewModes.Template
            ? !string.IsNullOrWhiteSpace(_selectedTemplateCategory) && !string.IsNullOrWhiteSpace(_selectedTemplateTag)
            : !string.IsNullOrWhiteSpace(_freeformReview);

    private void OpenReviewSheet()
    {
        if (_profile is null)
        {
            return;
        }

        _isReviewSheetOpen = true;
    }

    private void CloseReviewSheet()
    {
        _isReviewSheetOpen = false;
        _showSubmitConfirmation = false;
        _isSubmittingReview = false;
        _showStatusDialog = false;
        _lastSubmitSucceeded = null;
        ResetReviewForm();
    }

    private void SwitchReviewMode(string mode)
    {
        if (_reviewMode == mode)
        {
            return;
        }

        _reviewMode = mode;

        if (mode == ReviewModes.Template)
        {
            _freeformReview = string.Empty;
        }
        else
        {
            _selectedTemplateCategory = string.Empty;
            _selectedTemplateTag = string.Empty;
            _structuredNote = string.Empty;
        }
    }

    private void OnTemplateCategoryChanged()
    {
        _selectedTemplateTag = string.Empty;
    }

    private void RequestSubmit()
    {
        if (!CanSubmitReview || _isSubmittingReview)
        {
            return;
        }

        _showSubmitConfirmation = true;
    }

    private async Task ConfirmSubmitAsync()
    {
        _showSubmitConfirmation = false;
        _isSubmittingReview = true;

        // Simulate network latency without hitting a backend API.
        await Task.Delay(1500);

        _isSubmittingReview = false;
        _lastSubmitSucceeded = !_simulateFailure;
        _showStatusDialog = true;
    }

    private void CancelSubmitRequest()
    {
        _showSubmitConfirmation = false;
    }

    private void CloseStatusDialog()
    {
        if (_lastSubmitSucceeded == true)
        {
            CloseReviewSheet();
            return;
        }

        _showStatusDialog = false;
        _lastSubmitSucceeded = null;
    }

    private void RetrySubmit()
    {
        _showStatusDialog = false;
        _lastSubmitSucceeded = null;
        _showSubmitConfirmation = true;
    }

    private void StartAnotherReview()
    {
        _showStatusDialog = false;
        _lastSubmitSucceeded = null;
        ResetReviewForm();
    }

    private void ResetReviewForm()
    {
        _reviewMode = ReviewModes.Template;
        _selectedTemplateCategory = string.Empty;
        _selectedTemplateTag = string.Empty;
        _structuredNote = string.Empty;
        _freeformReview = string.Empty;
        _simulateFailure = false;
    }

    private static string DetermineSupportTone(int score) => score switch
    {
        > 0 => "positive",
        < 0 => "negative",
        _ => "neutral"
    };

    private static string FormatSupportScore(int score) =>
        score > 0 ? $"+{score}" : score.ToString(CultureInfo.InvariantCulture);

    private static string FormatCount(int value) =>
        value.ToString("N0", CultureInfo.InvariantCulture);

    protected override async Task OnParametersSetAsync()
    {
        _isLoading = true;
        _profile = await MovieDataProvider.GetMovieDetailAsync(MovieId);
        _isLoading = false;
    }
}
