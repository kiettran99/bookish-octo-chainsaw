@using System.Collections.Generic
@model CineReview.Client.Features.Movies.PaginatedMovies?

@{
    ViewData["Title"] = "Sắp công chiếu";
    var loadError = ViewData["LoadError"] as string;
}

@if (!string.IsNullOrWhiteSpace(loadError))
{
    <section class="container-xl py-5 my-5 text-center">
        <div class="alert alert-danger bg-danger-subtle border-danger-subtle text-danger-emphasis" role="alert">
            @loadError
        </div>
    </section>
}
else if (Model is null)
{
    <section class="container-xl py-5 my-5 text-center">
        <div class="spinner-border text-info" role="status"></div>
    </section>
}
else if (Model.TotalResults == 0)
{
    <section class="container-xl py-5 my-5 text-center">
        <h1 class="display-5 text-white mb-3">Chưa có phim sắp công chiếu</h1>
        <p class="text-secondary mb-4">Chúng tôi sẽ cập nhật danh sách phim và lịch phát sóng ngay khi có thông tin mới.</p>
        <a class="btn btn-outline-info" href="@Url.Action("Index", "Home")">Quay lại trang chủ</a>
    </section>
}
else
{
    <section class="container-xl py-5 my-4">
        <div class="d-flex flex-column flex-md-row justify-content-between align-items-start align-items-md-center gap-3 mb-4">
            <div>
                <p class="text-secondary text-uppercase small fw-semibold mb-2">Trang @Model.Page/@Model.TotalPages · @Model.TotalResults phim</p>
                <h1 class="display-5 fw-bold text-white mb-2">@Model.Title</h1>
                <p class="text-secondary mb-0">@Model.Description</p>
            </div>
            <div class="d-flex flex-column flex-sm-row gap-2">
                <a class="btn btn-primary btn-glow" href="#schedule">Đặt lịch phát sóng</a>
                <a class="btn btn-ghost" href="@Url.Action("Index", "Home")">Quay lại trang chủ</a>
            </div>
        </div>

        <div class="row g-4">
            @foreach (var movie in Model.Items)
            {
                <div class="col-12 col-sm-6 col-lg-4 col-xl-3">
                    @await Html.PartialAsync("_MovieCard", movie)
                </div>
            }
        </div>

        <div id="schedule" class="schedule-banner mt-5 mb-4 p-4 rounded-4 border border-info-subtle text-info-emphasis">
            <div class="d-flex flex-column flex-lg-row gap-3 align-items-lg-center justify-content-lg-between">
                <div>
                    <h2 class="h5 fw-semibold mb-2">Nhận thông báo suất chiếu sớm</h2>
                    <p class="mb-0 text-white">Đăng ký email để được ưu tiên nhận vé early-access và ưu đãi từ CineReview.</p>
                </div>
                <a class="btn btn-outline-info" href="mailto:press@cinereview.vn?subject=Dang%20ky%20lich%20phat%20song">Đăng ký ngay</a>
            </div>
        </div>

        @if (Model.TotalPages > 1)
        {
            <nav class="mt-4" aria-label="Phân trang phim sắp công chiếu">
                <ul class="pagination justify-content-center">
                    <li class="page-item @(Model.Page <= 1 ? "disabled" : null)">
                        <a class="page-link" href="@BuildPageUrl(Model.Page - 1)" aria-label="Trang trước">&lsaquo;</a>
                    </li>
                    @foreach (var pageNumber in GetPageNumbers(Model.Page, Model.TotalPages))
                    {
                        <li class="page-item @(pageNumber == Model.Page ? "active" : null)">
                            <a class="page-link" href="@BuildPageUrl(pageNumber)">@pageNumber</a>
                        </li>
                    }
                    <li class="page-item @(Model.Page >= Model.TotalPages ? "disabled" : null)">
                        <a class="page-link" href="@BuildPageUrl(Model.Page + 1)" aria-label="Trang sau">&rsaquo;</a>
                    </li>
                </ul>
            </nav>
        }
    </section>
}

@functions {
    private static IEnumerable<int> GetPageNumbers(int current, int total)
    {
        const int window = 5;
        var start = Math.Max(1, current - 2);
        var end = Math.Min(total, start + window - 1);
        start = Math.Max(1, end - window + 1);

        for (var page = start; page <= end; page++)
        {
            yield return page;
        }
    }

    private string BuildPageUrl(int page)
    {
        if (page <= 1)
        {
            return Url.Action("ComingSoon", "Movies") ?? string.Empty;
        }

        return Url.Action("ComingSoon", "Movies", new { page }) ?? string.Empty;
    }
}
